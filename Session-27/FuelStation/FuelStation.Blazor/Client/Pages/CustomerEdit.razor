@page "/customers/edit/{ID:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Customer Edit</h3>

@if (CustomerItem == null)
{
    <p>Loading ...</p>
}
else
{

     <div class="row">
            <div class="col-md-6">
                <label for="customer-name">Name</label>
                <input name="customer-name" class="form-control" @bind="@CustomerItem.Name" placeholder="Customer Name" />
            </div>
            <div class="col-md-6">
                <label for="customer-surname">Surname</label>
                <input name="customer-surname" class="form-control" @bind="@CustomerItem.Surname" placeholder="Customer Surname" />
            </div>
            <div class="col-md-6">
                <label for="customer-card">Card Number</label>
                <input name="customer-card" class="form-control" @bind="@CustomerItem.CardNumber" placeholder="Customer Card Number" />
            </div>
     </div> 
        <div class="row mt-2">
            <div class="col-md-6">
                <button class="btn btn-success" @onclick="OnSave">Save</button>
                <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
            </div>
        </div>
        
}



@code {
    [Parameter] public int? ID { get; set; }
    private CustomerEditViewModel CustomerItem { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (ID is null)
        {
            ID = 0;
        }
        CustomerItem = await httpClient.GetFromJsonAsync<CustomerEditViewModel>($"customer/{ID}");
    }

    protected async Task OnSave()
    {
        if (string.IsNullOrEmpty(CustomerItem.CardNumber) || string.IsNullOrEmpty(CustomerItem.Surname) || string.IsNullOrEmpty(CustomerItem.Name)) return;
         
        HttpResponseMessage response;
        if (ID == 0)
        {
            response = await httpClient.PostAsJsonAsync("customer", CustomerItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("customer", CustomerItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customers");
    }

    protected void OnCancel()
    {
        navigationManager.NavigateTo("customers");
    }
}
